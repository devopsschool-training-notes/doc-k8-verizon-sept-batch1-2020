===============================================
Automated Way - Using Dockerfile
===============================================

Jenkins
	openjdk:8-jdk
		buildpack-deps:buster-scm
			buildpack-deps:buster-curl
					debian:buster	rootfs
						scratch
===============================================
About jenkins
========================
jenkins container is running with which ??
		user
		port
		vol	DONE
		env	DONE
===================================
Rules
	Each line in Dockerfile - would create ONE layer.
	Each layer would  be written on seprately and alone 

FROM ubuntu
MAINTAINER Rajeshkumar DevOps@Rajeshkumar.xyz
RUN apt-get update
RUN apt-get install git -y
COPY devopsschool.txt /opt/
ENV JAVA_RAJU /opt/xyz
VOLUME /opt/xyz


FROM ubuntu
MAINTAINER Rajeshkumar DevOps@Rajeshkumar.xyz
RUN touch /opt/rajesh1.txt
RUN touch /opt/rajesh2.txt
RUN touch /opt/rajesh3.txt


  714  ls
  715  docker build -t image1 .
  716  vi dockerfile
  717  docker build -t image1 .
  718  touch devopsschool.txt
  719  docker build -t image1 .
  720  docker images
  721  docker run -itd --name im1 image1
  722  docker ps
  723  docker exec b90ff462d484 git
  724  docker exec b90ff462d484 ls /opt/
  725  docker exec b90ff462d484 df -kh
  726  docker exec b90ff462d484 env
  727  clear
  728  ls
  729  vi doc2
  730  docker build -t image1 -f doc2 .
  731  cd /var/lib/docker/
  732  clear
  733  lfd
  734  ls
  735  find . -name rajesh*
  736  find . -name rajesh*
  737  docker history
  738  clear
  739  ls
  740  docker images

	
===================================================
How can we set PID1?

CMD
	set CMD can be replaced

ENTRYPOINT
	set ENTRYPOINT CAN NOT be replaced

 710  docker run -itd ubuntu
  711  docker run -d jenkins
  712  docker ps
  713  docker run -itd ubuntu ls
  714  docker ps -a
  715  docker run -d jenkins ls
  716  docker ps -a
  717  clear
  718  docker run -itd ubuntu df -kh
  719  docker ps -a
  720  docker run  ubuntu df -kh
  721  docker run  ubuntu ls



Lab
https://www.devopsschool.com/tutorial/docker/dockerfile/dockerfile-example-sample-lab.html

Assignment
https://www.devopsschool.com/blog/dockerfile-lab-exercise-1/

Qs
What about if we Put 2 CMD
What about if we Put 2 ENTRYPOINT
What about if we Put 1 CMD 1 ENTRYPOINT
==================================================

ENTRYPOINT CMD  
===============================================================
Docker Compose
================================
What is Docker Compose?
	Automate Container service(s) for
			creating - updating - destorying
			-----------1 COMMAND --------------
	Reading one file..
		docker-compose.yaml
		
		service(s)
		web
			build - dockerfile
			vol - volname
			port 
			network
			env 
			img - img name

		app
			build
			vol
			port
			network
			env
			img

		db			
			build
			vol
			port
			network
			env
			img




What is Service?


Monolithic -->	SOA		-> Microservcies

DESKTOP		WEB SERVICE
		APP Service
		Db Service

==============================================
	docker-compose up
	docker-compose down



version: '2'
services:
  wordpress:
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    ports:
      - 80:80 # change ip if required
    volumes:
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
    depends_on:
      - db
    networks:
      - wordpress-network
  db:
    image: mysql:5.5 # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - 3306:3306 # change ip if required
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: password
    networks:
      - wordpress-network
networks:
  wordpress-network:
      driver: bridge




 752  docker-compose ps
  753  docker-compose down
  754  docker-compose ps
  755  docker-compose up -d
  756  docker-compose ps
  757  docker-compose logs
  758  docker-compose
  759  docker-compose help scale
  760  docker-compose scale wordpress=2
  761  docker-compose ps




https://www.devopsschool.com/tutorial/docker/labs/docker/docker-lab-6-link.html
Setting up the WordPress using Docker
Required Images.

$ docker pull mysql
$ docker pull wordpress
Run the mySql Docker Container

$ docker run --name wpmysql -e MYSQL_ROOT_PASSWORD=password -d mysql:5.5
$ docker ps
Run the wordpress Docker Container

$ docker run --name mywp --link wpmysql:mysql -P -d wordpress
Run the following commands and what kinds of environment variables its get exposed to wordpress after linking the docker.

$ docker run --rm --link wpmysql:mysql -P wordpress env
Now, Access the wordpress site and Lets add some pages and post into it and commit it and store with another name.

	
		
